buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1"
    }
}

allprojects {
    apply plugin:"idea"
}


subprojects { Project project ->
    ext {
        grailsVersion = project.grailsVersion
        gradleWrapperVersion = project.gradleWrapperVersion
    }

    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }

    apply plugin: "com.jfrog.artifactory"

    if (project.name in ['spring-security-rest', 'spring-security-rest-memcached', 'spring-security-rest-redis']) {
        apply plugin: "org.grails.grails-plugin"
        apply plugin: "org.grails.grails-plugin-publish"

        dependencies {
            console "org.grails:grails-console"

            compile "org.springframework.boot:spring-boot-starter-logging"
            compile "org.springframework.boot:spring-boot-autoconfigure"
            compile "org.grails:grails-core"

            provided "org.grails:grails-plugin-services"

            testCompile "org.grails:grails-plugin-testing"
        }

        test {
            testLogging {
                exceptionFormat = 'full'
                events 'failed', 'standardOut', 'standardError'
            }

            beforeTest { descriptor -> logger.quiet " -- $descriptor" }
        }

        artifactoryPublish {
            dependsOn sourcesJar, javadocJar
        }
    } else {
        apply plugin: "org.grails.grails-profile"
        apply plugin: "org.grails.grails-profile-publish"

        artifactoryPublish {
            dependsOn sourcesJar
        }
    }

    version "2.0.0.BUILD-SNAPSHOT"
    group "org.grails.plugins"
    ext.isSnapshot = version.endsWith('SNAPSHOT')

    grailsPublish {
        user = bintrayUser
        key = bintrayKey
        portalUser = pluginPortalUser
        portalPassword = pluginPortalPassword
        githubSlug = 'alvarosanchez/grails-spring-security-rest'
        license = 'APACHE 2.0'
        title = "Spring Security REST plugin"
        desc = "Grails plugin to implement token-based, RESTful authentication using Spring Security"
        developers = [
                alvarosanchez: "Alvaro Sanchez-Mariscal",
                Schlogen: "James Kleeh"
        ]
    }

    artifactory {
        contextUrl = 'http://oss.jfrog.org'
        publish {
            repository {
                repoKey = isSnapshot ? 'oss-snapshot-local' : 'oss-release-local'
                username = bintrayUser
                password = bintrayKey
            }
            defaults {
                // Reference to Gradle configurations defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('maven')
            }
        }
    }

    task exportVersion << {
        new File("${buildDir}/version.txt").write(project.version as String)
    }

    check.dependsOn exportVersion

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}